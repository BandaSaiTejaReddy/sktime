# adapted from
# - https://iscinumpy.gitlab.io/post/azure-devops-python-wheels/

variables:
  REQUIREMENTS: build_tools/requirements.txt
  EXCLUDE_PYTHON_VERSIONS: "2.7, 3.5"  # comma-separate string
  TEST_DIR: '$(Agent.WorkFolder)/tmp_folder'
  PYTEST_RESULTS: 'pytest-results.xml'

trigger:
  - master
  - dev

pr:
  # Cancel if new commits are pushed to the same PR
  autoCancel: true

stages:
  - stage: 'build'
    jobs:
      - job: 'manylinux'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build_tools/azure/build_manylinux_wheels.yml
          - template: build_tools/azure/publish.yml
        strategy:
          matrix:
            64x2010:  # 64 bit 2010
              ARCH: x86_64
              PLATFORM: manylinux2010_x86_64
              IMAGE: quay.io/pypa/manylinux2010_x86_64
              PYTHON_ARCHITECTURE: x64
            64x:  # 64 bit
              ARCH: x86_64
              PLATFORM: manylinux1_x86_64
              IMAGE: quay.io/pypa/manylinux1_x86_64
              PYTHON_ARCHITECTURE: x64
#            86x:  # 32 bit
#              ARCH: i686
#              PLATFORM: manylinux1_i686
#              IMAGE: quay.io/pypa/manylinux1_i686
#              PYTHON_ARCHITECTURE: x86
#            64x2014:  # 32 bit
#              ARCH: x86_64
#              PLATFORM: manylinux2014_x86_64
#              IMAGE: quay.io/pypa/manylinux2014_x86_64
#              PYTHON_ARCHITECTURE: x86


  - stage: 'deploy'
    dependsOn: 'build'
    condition: succeeded('build')
    jobs:
      - job: 'deploy_to_pypi'
#        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Collect wheels'
            inputs:
              source: 'current' # Options: current, specific
              runVersion: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
#              runBranch: 'refs/heads/master'
#              tags: '^v[0-9]\.[0-9]\.[0-9]$'
              patterns: '*manylinux*.whl'
              #path: '$(Pipeline.Workspace)'
          - script: 'python -m pip install twine'
            displayName: 'Install twine'
          - script: |
              ls -lh *alan-turing-institute.sktime/wheels_*/*
            displayName: 'List wheels'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate'
            inputs:
              pythonUploadServiceConnection: PyPI
          - script: |
              cat $(PYPIRC_PATH)
#             twine upload -r pypi --config-file $(PYPIRC_PATH) --skip-existing --verbose *mloning/stkime/wheels_*/*
            displayName: 'Upload wheels to PyPI'
