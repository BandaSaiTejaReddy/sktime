# adapted from
# - https://iscinumpy.gitlab.io/post/azure-devops-python-wheels/

variables:
  REQUIREMENTS: build_tools/requirements.txt
  EXCLUDE_PYTHON_VERSIONS: "2.7, 3.5"  # comma-separate string

trigger:
  - master
  - dev

pr:
  # Cancel if new commits are pushed to the same PR
  autoCancel: true

jobs:
  - job: manylinux
    strategy:
      matrix:
        64x2010:  # 64 bit 2010
          ARCH: x86_64
          PLATFORM: manylinux2010_x86_64
          IMAGE: quay.io/pypa/manylinux2010_x86_64
          PYTHON_ARCHITECTURE: x64
        64x:  # 64 bit
          ARCH: x86_64
          PLATFORM: manylinux1_x86_64
          IMAGE: quay.io/pypa/manylinux1_x86_64
          PYTHON_ARCHITECTURE: x64
#        86x:  # 32 bit
#          ARCH: i686
#          PLATFORM: manylinux1_i686
#          IMAGE: quay.io/pypa/manylinux1_i686
#          PYTHON_ARCHITECTURE: x86
#        64x2014:  # 32 bit
#          ARCH: x86_64
#          PLATFORM: manylinux2014_x86_64
#          IMAGE: quay.io/pypa/manylinux2014_x86_64
#          PYTHON_ARCHITECTURE: x86
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: build_tools/azure/build_manylinux_wheels.yml

  - job: publish_artifacts
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Publish artifacts'
    steps:
      - task: CopyFiles@2
        inputs:
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'dist'
          publishLocation: 'Container'

  - job: deploy_to_pypi
    displayName: 'Deploy to PyPI'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - script: |
          pip install twine
        displayName: 'Install twine'
      # Python twine upload authenticate V1
      # See https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/twine-authenticate?view=azure-devops#publish-python-distribution-to-azure-artifacts-feed
      - task: TwineAuthenticate@1
        displayName: 'Authenticate twine'
        inputs:
          artifactFeed: sktime/feed # <Project Name>/<Feed Name>
      - script: |
          twine upload -r "feed" --skip-existing --config-file $(PYPIRC_PATH) --verbose ./dist/*.whl
        displayName: 'Uploading to PyPI'