# adapted from
# - https://iscinumpy.gitlab.io/post/azure-devops-python-wheels/

variables:
  REQUIREMENTS: build_tools/requirements.txt
  EXCLUDE_PYTHON_VERSIONS: "2.7, 3.5"  # comma-separate string
  TEST_DIR: '$(Agent.WorkFolder)/tmp_folder'
  PYTEST_RESULTS: 'pytest-results.xml'

trigger:
  - master
  - dev

pr:
  # Cancel if new commits are pushed to the same PR
  autoCancel: true

stages:
  - stage: 'build'
    jobs:
      - job: 'build_manylinux'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build_tools/azure/build_manylinux_wheels.yml
          - template: build_tools/azure/publish.yml
        strategy:
          matrix:
            64x2010:  # 64 bit 2010
              PLATFORM: manylinux2010_x86_64
              IMAGE: quay.io/pypa/manylinux2010_x86_64
              PYTHON_ARCHITECTURE: x64
            64x:  # 64 bit
              PLATFORM: manylinux1_x86_64
              IMAGE: quay.io/pypa/manylinux1_x86_64
              PYTHON_ARCHITECTURE: x64
#            86x:  # 32 bit
#              PLATFORM: manylinux1_i686
#              IMAGE: quay.io/pypa/manylinux1_i686
#              PYTHON_ARCHITECTURE: x86
            64x2014:  # 64 bit
              PLATFORM: manylinux2014_x86_64
              IMAGE: quay.io/pypa/manylinux2014_x86_64
              PYTHON_ARCHITECTURE: x86

  - stage: 'deploy'
    dependsOn: 'build'
    condition: succeeded('build')
#        condition: and(succeeded('build'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: 'deploy_to_pypi'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Collect wheels'
            inputs:
              source: 'current'
              path: '$(Pipeline.Workspace)/download/'
              runVersion: 'latest'
#              source: 'specific'
#              runVersion: 'latestFromBranch'
#              runBranch: 'refs/heads/master'
#              tags: '^v[0-9]\.[0-9]\.[0-9]$'
              patterns: 'wheels_*/*manylinux*.whl'
          - script: |
              mkdir dist
              cp $(Pipeline.Workspace)/download/wheels_*/*manylinux*.whl dist/
              ls -lh dist/
            displayName: 'Select and list wheels'
          - script: |
              pip install --upgrade twine
            displayName: 'Install twine'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate'
            inputs:
              # configured in https://dev.azure.com/<user>/<project>/_settings/adminservices
              pythonUploadServiceConnection: PyPI
          - script: |
              cat $(PYPIRC_PATH)
              ls -lh dist/*.whl
#             twine upload -r pypi --config-file $(PYPIRC_PATH) --skip-existing --verbose dist/*.whl
            displayName: 'Upload wheels to PyPI'
